// <auto-generated />
using System;
using Gotcha.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gotcha.Migrations
{
    [DbContext(typeof(Gotcha_DBcontext))]
    [Migration("20210527162725_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gotcha.Models.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EindTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameType_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Maker_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxPlayers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RandomWiner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RuleSet_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WordSet_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameType_Id");

                    b.HasIndex("Maker_Id");

                    b.HasIndex("RuleSet_Id");

                    b.HasIndex("WordSet_Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Gotcha.Models.GameType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Game_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Maker_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Maker_Id");

                    b.ToTable("GameTypes");
                });

            modelBuilder.Entity("Gotcha.Models.PlayerSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EliminatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Eliminations")
                        .HasColumnType("int");

                    b.Property<Guid>("Game_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Word_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Game_Id");

                    b.ToTable("PlayerSets");
                });

            modelBuilder.Entity("Gotcha.Models.Rule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Maker_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RuleSetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Maker_Id");

                    b.HasIndex("RuleSetId");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("Gotcha.Models.RuleSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Maker_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Maker_Id");

                    b.ToTable("RuleSets");
                });

            modelBuilder.Entity("Gotcha.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Maker_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UserActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Gotcha.Models.Word", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Maker_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WordSetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Maker_Id");

                    b.HasIndex("WordSetId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Gotcha.Models.WordSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Maker_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Maker_Id");

                    b.ToTable("WordSets");
                });

            modelBuilder.Entity("Gotcha.Models.Game", b =>
                {
                    b.HasOne("Gotcha.Models.GameType", "GameType")
                        .WithMany("Games")
                        .HasForeignKey("GameType_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gotcha.Models.User", "User")
                        .WithMany("Games")
                        .HasForeignKey("Maker_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gotcha.Models.RuleSet", "RuleSet")
                        .WithMany("Games")
                        .HasForeignKey("RuleSet_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gotcha.Models.WordSet", "WordSet")
                        .WithMany("Games")
                        .HasForeignKey("WordSet_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gotcha.Models.GameType", b =>
                {
                    b.HasOne("Gotcha.Models.User", "User")
                        .WithMany("GameTypes")
                        .HasForeignKey("Maker_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Gotcha.Models.PlayerSet", b =>
                {
                    b.HasOne("Gotcha.Models.Game", "Game")
                        .WithMany("PlayerSets")
                        .HasForeignKey("Game_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gotcha.Models.Rule", b =>
                {
                    b.HasOne("Gotcha.Models.User", "User")
                        .WithMany("Rules")
                        .HasForeignKey("Maker_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Gotcha.Models.RuleSet", null)
                        .WithMany("Rules")
                        .HasForeignKey("RuleSetId");
                });

            modelBuilder.Entity("Gotcha.Models.RuleSet", b =>
                {
                    b.HasOne("Gotcha.Models.User", "User")
                        .WithMany("RuleSets")
                        .HasForeignKey("Maker_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Gotcha.Models.User", b =>
                {
                    b.HasOne("Gotcha.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("Gotcha.Models.Word", b =>
                {
                    b.HasOne("Gotcha.Models.User", "User")
                        .WithMany("Word")
                        .HasForeignKey("Maker_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Gotcha.Models.WordSet", null)
                        .WithMany("Words")
                        .HasForeignKey("WordSetId");
                });

            modelBuilder.Entity("Gotcha.Models.WordSet", b =>
                {
                    b.HasOne("Gotcha.Models.User", "User")
                        .WithMany("WordSets")
                        .HasForeignKey("Maker_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
